#include <dt-bindings/zmk/matrix_transform.h>  // キーマトリクス変換に使うマクロ（RC(row, col)など）を定義

/ {
    chosen {
        zmk,kscan = &kscan0;  // 使用するキースキャンデバイスを指定（下で定義）
        zmk,matrix_transform = &default_transform;  // 行列変換マップをここで指定
    };

    // デフォルトのキーマトリクス変換定義
    default_transform: keymap_transform_0 {
        compatible = "zmk,matrix-transform";  // ZMK用のマトリクス変換であることを指定
        columns = <14>;  // 列数は10
        rows = <3>;      // 行数は4

        // マップの定義（物理スイッチの配置 → 行列上の位置）
        map = <
            RC(0,0) RC(0,1) RC(0,2) RC(0,3) RC(0,4) RC(0,5) RC(0,6)    RC(0,7) RC(0,8) RC(0,9) RC(0,10) RC(0,11) RC(0,12) RC(0,13)  
            RC(1,0) RC(1,1) RC(1,2) RC(1,3) RC(1,4) RC(1,5) RC(1,6)    RC(1,7) RC(1,8) RC(1,9) RC(1,10) RC(1,11) RC(1,12) RC(1,13)  
            RC(2,0) RC(2,1) RC(2,2) RC(2,3) RC(2,4) RC(2,5) RC(2,6)    RC(2,7) RC(2,8) RC(2,9) RC(2,10) RC(2,11) RC(2,12) RC(2,13)       
        >;
    };

    // キースキャン用のGPIOマトリクス設定
    kscan0: kscan_0 {
        compatible = "zmk,kscan-gpio-matrix";  // GPIOでマトリクススキャンを行う設定
        label = "KSCAN";  // デバイスラベル（任意）

        diode-direction = "col2row";  // ダイオードの向き（列→行）

        // 各行に接続されたGPIOピン（XIAOのD0〜D3を使用）
        row-gpios = 
            <&xiao_d 0 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>,
            <&xiao_d 1 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>,
            <&xiao_d 2 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>;
    };
};
