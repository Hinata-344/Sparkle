#include <behaviors.dtsi> // ZMKの標準的なビヘイビア定義を読み込み
#include <dt-bindings/zmk/keys.h> // キーコード定義のヘッダー
#include <dt-bindings/zmk/bt.h> // Bluetooth関連のマクロ定義
#include <dt-bindings/zmk/outputs.h> // 出力先の切り替えなどの定義

#define BASE 0        // レイヤー0: 通常キー
#define JPN  1        //NAV  1 // レイヤー1: ナビゲーション用
#define SYM  2        //SYM  2 // レイヤー2: 記号入力用
#define BOTH 3        //ADJ  3 // レイヤー3: 調整・設定用

/*  長押し、短押しの設定
&mt { // Mod-Tapの設定
  quick-tap-ms = <100>; // クイックタップ判定時間（ms）
  global-quick-tap;     // 全体に適用
  flavor = "tap-preferred"; // タップ優先
  tapping-term-ms = <170>; // タップとして認識される最大時間
};
*/

/ {
    combos { // コンボ（複数キー同時押し）設定
        compatible = "zmk,combos";
        combo_esc {
            timeout-ms = <50>; // 同時押しと見なす時間幅
            key-positions = <0 1>; // QとW
            bindings = <&kp ESC>; // ESCを出力
        };
    };

    macros { // マクロ定義
        gif: gif {
            label = "giphy";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>; // マクロに引数はなし
            bindings
                = <&macro_press &kp LSHFT> // Shift押下
                , <&macro_tap &kp N2>       // 数字2入力
                , <&macro_release &kp LSHFT> // Shift解放
                , <&macro_tap &kp G &kp I &kp F>; // "GIF"入力
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base_layer {
            label= "BASE"; // 通常レイヤー
            bindings = <
                &kp Q       &kp W       &kp F       &kp P       &kp G           &kp J       &kp L       &kp U       &kp Y       &kp SEMI
                &mt LGUI A  &mt LALT R  &mt LCTRL S &mt LSHFT T &kp D           &kp H       &mt RSHFT N &mt RCTRL E &mt RALT I  &mt RGUI O
                &kp Z       &kp Z       &kp X       &kp C       &kp V           &kp B       &kp K       &kp M       &kp COMMA   &kp DOT     &kp FSLH &kp FSLH
                                     &kp TAB     &kp TAB     &lt NAV SPACE   &lt SYM RET &kp BSPC    &kp BSPC
            >;
        };

        nav_layer {
            label= "NAVI"; // ナビゲーション系
            bindings = <
                &kp ESC     &bt BT_CLR  &kp UP      &kp EQUAL   &kp LBRC        &kp RBRC    &kp KP_N7   &kp KP_N8   &kp KP_N9   &kp KP_PLUS
                &kp LSHFT   &kp LEFT    &kp DOWN    &kp RIGHT   &kp LBKT        &kp RBKT    &kp KP_N4   &kp KP_N5   &kp KP_N6   &kp KP_MINUS
                &trans      &kp DEL     &kp PG_UP   &kp CAPS    &kp PG_DN       &kp LPAR    &kp RPAR    &kp KP_N1   &kp KP_N2   &kp KP_N3   &kp KP_MULTIPLY &trans
                                     &trans      &trans      &trans          &mo ADJ     &kp KP_N0   &trans
            >;
        };

        sim_layer {
            label= "SYM"; // 記号・音声操作レイヤー
            bindings = <
                &kp EXCL    &kp AT      &kp HASH    &kp DLLR    &kp PRCNT       &kp CARET   &kp AMPS    &kp RA(U)   &kp SQT     &kp DQT
                &kp RA(A)   &trans      &kp RA(S)   &trans      &trans          &kp C_MUTE  &kp LS(RA(N4)) &kp RA(N5) &kp RA(N4) &kp RA(O)
                &trans      &kp RA(F18) &kp RA(F19) &trans      &trans          &trans      &kp C_VOL_DN &kp C_VOL_UP &kp C_PREV &kp C_NEXT &kp BSLH &trans
                                     &trans      &gif        &mo ADJ         &trans      &kp C_PP     &trans
            >;
        };

        adjust_layer {
            label= "ADJ"; // システム調整系レイヤー
            bindings = <
                &sys_reset  &bt BT_CLR  &out OUT_TOG &trans      &trans          &trans      &kp F7      &kp F8      &kp F9      &kp F12
                &bootloader &bt BT_NXT  &trans       &trans      &trans          &trans      &kp F4      &kp F5      &kp F6      &kp F11
                &trans      &trans      &bt BT_PRV   &trans      &trans          &trans      &trans      &kp F1      &kp F2      &kp F3      &kp F10   &trans
                                     &trans      &trans      &trans          &trans      &trans      &trans
            >;
        };
    };
};
